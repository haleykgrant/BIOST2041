geom_point() +
theme_bw() +
facet_wrap(.~variable) +
labs(x = "Residuals (X | other)", y = "Residuals (Y | other)") +
geom_smooth(method = "lm")
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
car::vif(lm(y~x1+x2,data = dt))
library(tidyverse)
set.seed(23)
x1 = runif(n=50, max = 10)
x2 = 3 + 0.5*x1 + rnorm(n=50, sd=0.75)
y = 4.2 + 1.5*x1 + rnorm(n=50, sd = 1.3)
dt = data.frame(x1,x2,y)
c = .3
dt %>%
ggplot(aes(x = x1*c, y=y)) +
geom_point() +
theme_bw() +
labs(x = paste0(c," * x1")) +
xlim(0, 30)
se = (summary(lm(y~x1c, data = dt%>%mutate(x1c=x1*c)))$coef[2,2])%>% round(digits=5)
print(paste0("Standard Error for b coefficient: ",se))
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
xres1 = lm(x1 ~ x2, data = dt)$residuals
yres1 = lm(y ~ x2, data = dt)$residuals
xres2 = lm(x2 ~ x1, data = dt)$residuals
yres2 = lm(y ~ x1, data = dt)$residuals
av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2),
variable = rep(c("Removing X2", "Removing X1"), each = 50))
av.data %>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
labs(x = "Residuals (X | other)", y = "Residuals (Y | other)") +
geom_smooth(method = "lm")
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
set.seed(23)
x1 = runif(n=50, max = 10)
x2 = 3 + 0.5*x1 + rnorm(n=50, sd=0.5)
y = 4.2 + 1.5*x1 + rnorm(n=50, sd = 1.3)
dt = data.frame(x1,x2,y)
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
xres1 = lm(x1 ~ x2, data = dt)$residuals
yres1 = lm(y ~ x2, data = dt)$residuals
xres2 = lm(x2 ~ x1, data = dt)$residuals
yres2 = lm(y ~ x1, data = dt)$residuals
av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2),
variable = rep(c("Removing X2", "Removing X1"), each = 50))
av.data %>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
labs(x = "Residuals (X | other)", y = "Residuals (Y | other)") +
geom_smooth(method = "lm")
summary(x2)
x2 = 3 + 0.5*x1 + rnorm(n=50, sd=0.5) %>% round() %>% as.factor()
x2 = 3 + 0.5*x1 + rnorm(n=50, sd=0.5) %>% round() %>% factor()
x2 = (3 + 0.5*x1 + rnorm(n=50, sd=0.5) )%>% round() %>% factor()
x2
dt = data.frame(x1,x2,y)
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2),
x = c(x2,x1),
variable = rep(c("Removing X2", "Removing X1"), each = 50))
av.data %>%
ggplot(aes(x = x_axis, y = y_axis, color = x)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
labs(x = "Residuals (X | other)", y = "Residuals (Y | other)") +
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing x2") %>%
ggplot(aes(x = x_axis, y = y_axis,color = x)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing X2") %>%
ggplot(aes(x = x_axis, y = y_axis,color = x)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis,color = x2)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable) +
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis,color = x2)) +
geom_point() +
theme_bw() +
facet_wrap(.~variable)
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis) +
geom_point(aes(color = x2))
av.data %>%
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm")
)
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm") +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)") +
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm") +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm") +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_point(aes(color = x2)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)")
av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
geom_point(aes(color = x2)) +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)")
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
av.data %>%
filter(variable=="Removing X1") %>%
mutate(x1 = x1)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
geom_point(aes(color = x1)) +
labs(x = "Residuals (X2 | X1)", y = "Residuals (Y | X1)")
dt %>%
ggplot(aes(x = x2, y=y, color = x1)) +
geom_point() +
theme_bw() +
xlim(0, 10)
dt %>%
ggplot(aes(x = x2, y=y, color = x1)) +
geom_point()
dt %>%
ggplot(aes(x = x2, y=y, color = x1)) +
geom_point() +
theme_bw()
av.data %>%
filter(variable=="Removing X1") %>%
mutate(x1 = x1)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
geom_point(aes(color = x1)) +
labs(x = "Residuals (X2 | X1)", y = "Residuals (Y | X1)")
?psych::pairs.panels
psych::pairs.panels(dt)
psych::pairs.panels(dt, ellipses = F, hist.col = "dodgerblue")
psych::pairs.panels(dt, ellipses = F, hist.col = "steelblue1")
library(shiny)
cor(x1,(3 + 0.5*x1 )%>% round() %>% factor())
cor(x1,(3 + 0.5*x1 )%>% round() )
vals = list(( x2=NULL,c=NULL,av.data=NULL))
vals = list( x2=NULL,c=NULL,av.data=NULL)
x1 = runif(n=50, max = 10)
y = 4.2 + 1.5*x1 + rnorm(n=50, sd = 1.3)
x2<-(3 + 0.5*x1 +rnorm(n=50, sd =0.5))%>% round() %>% factor()
vals$x2=x2
vals
xres1 = lm(x1 ~ x2, data = dt)$residuals
yres1 = lm(y ~ x2, data = dt)$residuals
xres2 = lm(x2 ~ x1, data = dt)$residuals
yres2 = lm(y ~ x1, data = dt)$residuals
vals$av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2)
variable = rep(c("Removing X2", "Removing X1"),
xres1 = lm(x1 ~ x2, data = dt)$residuals
yres1 = lm(y ~ x2, data = dt)$residuals
xres2 = lm(x2 ~ x1, data = dt)$residuals
yres2 = lm(y ~ x1, data = dt)$residuals
vals$av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2),
variable = rep(c("Removing X2", "Removing X1"),
each = 50))
vals$c=1
dt = data.frame(x1,y) %>% mutate(x1c = x1*vals$c)
dt %>%
ggplot(aes(x = x1c, y=y)) +
geom_point() +
theme_bw() +
labs(x = paste0(vals$c," * x1")) +
xlim(0, 30)
se = (summary(lm(y~x1c, data = dt %>%
mutate(x1c=x1*c)))$coef[2,2]) %>%
round(digits=5)
print(paste0("Standard Error for b coefficient: ",se))
dt = data.frame(x1,y) %>% mutate(x2 = vals$x2)
dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
dt = data.frame(x1,y) %>% mutate(x2 = vals$x2)
p1 = dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10)
p2 = vals$av.data %>%
filter(variable=="Removing X2") %>%
mutate(x2 = x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
geom_point(aes(color = x2)) +
labs(x = "Residuals (X1 | X2)", y = "Residuals (Y | X2)")
gridExtra::grid.arrange(p1,p2)
install.packages("shinylive")
print(paste0("Standard Error for ", expression(beta)," coefficient: ",se))
cor(x1,(3 + 0.5*x1 +rnorm(n=50, sd =1)))
cor(x1,(3 + 0.25*x1 +rnorm(n=50, sd =1)))
install.packages("psych")
set.seed(23)
N = 100
x1 = runif(n = N, max = 10)
y = 4.2 + 1.5*x1 + rnorm(n = N, sd = 1.3)
origx2<-(3 + 0.5*x1 +rnorm(n = N, sd =1.1))
vals$x2 = origx2
vals<-list( x2=origx2,c=1,av.data=NULL,dt=NULL,cor = 0.5)
vals$dt = data.frame(x1, x2 = vals$x2,y)
vals$cor = as.numeric(input$cor1)
input = list(cor1 = 0.75)
vals$dt = data.frame(x1, x2 = vals$x2,y)
vals$cor = as.numeric(input$cor1)
xres1 = round(lm(x1 ~ x2, data = vals$dt)$residuals,digits = 6)
yres1 = round(lm(y ~ x2, data = vals$dt)$residuals , digits = 6)
xres2 = round(lm(x2 ~ x1, data = vals$dt)$residuals, digits = 6)
yres2 = round(lm(y ~ x1, data = vals$dt)$residuals, digits = 6)
vals$av.data = data.frame(x_axis = c(xres1, xres2),
y_axis = c(yres1, yres2),
variable = rep(c("Removing x2", "Removing x1"),
each = 50))
psych::pairs.panels(vals$dt, ellipses = F, hist.col = "skyblue1")
vals$dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
labs(title  = "Data colored by x2 value")
library(tidyverse)
vals$dt %>%
ggplot(aes(x = x1, y=y, color = x2)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
labs(title  = "Data colored by x2 value")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
stat_summary(fun = mean, aes(x = ..x..), geom = "vline", linetype = "dashed", color = "black", size = 1) +
stat_summary(fun = mean, aes(y = ..y..), geom = "hline", linetype = "dashed", color = "black", size = 1)
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
stat_summary(fun = mean, aes(x = after_stat(x)), geom = "vline", linetype = "dashed", color = "black", size = 1) +
stat_summary(fun = mean, aes(y = after_stat(y)), geom = "hline", linetype = "dashed", color = "black", size = 1)
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
stat_summary(fun = mean, aes(x = after_stat(x1)), geom = "vline", linetype = "dashed", color = "black", size = 1) +
stat_summary(fun = mean, aes(y = after_stat(y)), geom = "hline", linetype = "dashed", color = "black", size = 1)
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
stat_summary(fun = mean, aes(x = after_stat(x1)), geom = "vline", linetype = "dashed", color = "black", size = 1)
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
geom_vline(data = data %>% group_by(group) %>% summarize(mean_x = mean(x)), aes(xintercept = mean_x), linetype = "dashed", color = "black")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
geom_vline(data = data %>% group_by(x2_round) %>% summarize(mean_x = mean(x1)), aes(xintercept = mean_x), linetype = "dashed", color = "black")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
geom_vline(data = vals$dt %>% group_by(x2_round) %>% summarize(mean_x = mean(x1)), aes(xintercept = mean_x), linetype = "dashed", color = "black")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
geom_vline(data = vals$dt %>% mutate(x2_round = round(x2)) %>% group_by(x2_round) %>% summarize(mean_x = mean(x1)), aes(xintercept = mean_x), linetype = "dashed", color = "black")
vals$dt %>%
mutate(x2_round = round(x2)) %>%
ggplot(aes(x = x1, y=y, color = x2_round)) +
geom_point() +
theme_bw() +
xlim(0, 10) +
scale_color_viridis_c(option="turbo") +
facet_wrap(.~x2_round)+
labs(title  = "Data split by x2 value") +
geom_smooth(method = "lm", se = F, size = 0.5) +
labs(color = "x2\n(rounded)")+
geom_vline(data = vals$dt %>% mutate(x2_round = round(x2)) %>% group_by(x2_round) %>% summarize(mean_x = mean(x1)), aes(xintercept = mean_x), linetype = "dashed", color = "black") +
geom_hline(data = vals$dt %>% mutate(x2_round = round(x2)) %>% group_by(x2_round) %>% summarize(mean_y = mean(y)), aes(yintercept = mean_y), linetype = "dashed", color = "black")
vals$av.data %>%
filter(variable=="Removing x2") %>%
mutate(x2 = vals$x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black") +
geom_point(aes(color = x2)) +
labs(x = "Residuals (x1 | x2)", y = "Residuals (Y | x2)",
title = "Adjusted Variable Plot",
subtitle = "Adjusting for x2") +
scale_color_viridis_c(option="turbo") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_vline(xintercept = 0,linetype = "dashed", color = "black")
vals$av.data %>%
filter(variable=="Removing x2") %>%
mutate(x2 = vals$x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black", se = F,linewidth = 0.75) +
geom_point(aes(color = x2)) +
labs(x = "Residuals (x1 | x2)", y = "Residuals (Y | x2)",
title = "Adjusted Variable Plot",
subtitle = "Adjusting for x2") +
scale_color_viridis_c(option="turbo") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_vline(xintercept = 0,linetype = "dashed", color = "black")
vals$av.data %>%
filter(variable=="Removing x2") %>%
mutate(x2 = vals$x2)%>%
ggplot(aes(x = x_axis, y = y_axis)) +
theme_bw() +
geom_smooth(method = "lm",color = "black", se = F,linewidth = 0.5) +
geom_point(aes(color = x2)) +
labs(x = "Residuals (x1 | x2)", y = "Residuals (Y | x2)",
title = "Adjusted Variable Plot",
subtitle = "Adjusting for x2") +
scale_color_viridis_c(option="turbo") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_vline(xintercept = 0,linetype = "dashed", color = "black")
psych::pairs.panels(vals$dt, ellipses = F, hist.col = "skyblue1")
?car::avPlot
install.packages("GGally")
library(GGally)
ggpairs(vals$dt,
upper = list(continuous = "cor"),
lower = list(continuous = "smooth"),
diag = list(continuous = "densityDiag"))
ggpairs(vals$dt,
lower = list(continuous = "smooth"),
diag = list(continuous = "densityDiag"))
?ggpairs
ggpairs(vals$dt,
upper = list(continuous = "points"),
lower = list(continuous = "smooth"),
diag = list(continuous = "densityDiag")) +
theme_bw()
ggpairs(vals$dt,
upper = wrap("blank"),
lower = list(continuous = "points"),
diag = list(continuous = "densityDiag")) +
theme_bw()
ggpairs(vals$dt,
upper = list(continuous = wrap("blank")),
lower = list(continuous = "points"),
diag = list(continuous = "densityDiag")) +
theme_bw()
